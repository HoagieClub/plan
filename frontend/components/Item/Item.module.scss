@keyframes pop {
  0% {
    transform: scale(1);
    box-shadow:
      0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05),
      0 1px calc(3px / var(--scale-x, 1)) 0 rgba(34, 33, 81, 0.15);
  }
  100% {
    transform: scale(var(--scale));
    box-shadow: var(--box-shadow-picked-up);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes shrinkWidth {
  from {
    max-width: 100%;
    left: 0%
  }
  to {
    max-width: 50%; /* Adjust the target width as needed */
    left: 50%;
  }
}

@keyframes expandWidth {
  from {
    max-width: 50%; /* Start from the shrunken width */
    left: 50%; /* Start from the shrunken position */
  }
  to {
    max-width: 100%; /* Return to full width */
    left: 0%; /* Return to original position */
  }
}

.Wrapper {
  display: flex;
  height: 30px !important;
  box-sizing: border-box;
  position: relative;
  transform: translate3d(var(--translate-x, 0), var(--translate-y, 0), 0) scaleX(var(--scale-x, 1))
    scaleY(var(--scale-y, 1));
  //transform-origin: 0 0;
  touch-action: manipulation;
}

.Wrapper.fadeIn {
  animation: fadeIn 250ms ease;
}

.Wrapper.dragOverlay {
  --scale: 1.05;
  --box-shadow: 0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05),
    0 1px calc(3px / var(--scale-x, 1)) 0 rgba(34, 33, 81, 0.15);
  --box-shadow-picked-up: 0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05),
    -1px 0 15px 0 rgba(34, 33, 81, 0.01), 0px 15px 15px 0 rgba(34, 33, 81, 0.25);
  z-index: 999;
}

.Wrapper.expand {
  animation: expandWidth 200ms forwards; /* 'forwards' ensures the element stays in the final state of the animation */
}

.Wrapper.shrink {
  animation: shrinkWidth 200ms forwards; /* 'forwards' keeps the item at the animation's end state */
}

.Item {
  position: relative;
  height: 30px;
  display: flex;
  flex-grow: 1;
  align-items: center;
  padding: 15px 15px;
  background-color: #fff;
  box-shadow:
    0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05),
    0 1px calc(3px / var(--scale-x, 1)) 0 rgba(34, 33, 81, 0.15);
  outline: none;
  border-radius: calc(4px / var(--scale-x, 1));
  box-sizing: border-box;
  list-style: none;
  //transform-origin: 50% 50%;

  -webkit-tap-highlight-color: transparent;

  color: #333;
  font-weight: 400;
  font-size: 1rem;
  white-space: nowrap;

  transform: scale(var(--scale, 1));
  transition: box-shadow 200ms cubic-bezier(0.18, 0.67, 0.6, 1.22);
}

.Item:focus-visible {
  box-shadow:
    0 0px 4px 1px #4c9ffe,
    0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05),
    0 1px calc(3px / var(--scale-x, 1)) 0 rgba(34, 33, 81, 0.15);
}

.Item:not(.withHandle) {
  touch-action: manipulation;
  cursor: grab;
}

.Item.dragging:not(.dragOverlay) {
  opacity: var(--dragging-opacity, 0.5);
  z-index: 0;
}

.Item.dragging:not(.dragOverlay):focus {
  box-shadow:
    0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05),
    0 1px calc(3px / var(--scale-x, 1)) 0 rgba(34, 33, 81, 0.15);
}

.Item.disabled {
  color: #999;
  background-color: #f1f1f1;
}

.Item.disabled:focus {
  box-shadow:
    0 0px 4px 1px rgba(0, 0, 0, 0.1),
    0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05),
    0 1px calc(3px / var(--scale-x, 1)) 0 rgba(34, 33, 81, 0.15);
  cursor: not-allowed;
}

.Item.dragOverlay {
  cursor: inherit;
  animation: pop 200ms cubic-bezier(0.18, 0.67, 0.6, 1.22);
  transform: scale(var(--scale));
  box-shadow: var(--box-shadow-picked-up);
  opacity: 1;
}

.Item.color:before {
  content: '';
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 0;
  height: 100%;
  width: 3px;
  display: block;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
  background-color: var(--color);
}

.Item:hover .Remove {
  visibility: visible;
}

.Remove {
  visibility: visible;
}

.Actions {
  display: flex;
  align-self: flex-start;
  margin-top: -12px;
  margin-left: auto;
  margin-bottom: -15px;
  margin-right: -10px;
}
